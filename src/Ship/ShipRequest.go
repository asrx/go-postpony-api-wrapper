package Ship

import (
	"encoding/xml"
	"fmt"
	"github.com/asrx/go-postpony-api-wrapper/src"
	"github.com/asrx/go-postpony-api-wrapper/src/ComplexType"
	"github.com/asrx/go-postpony-api-wrapper/src/Config"
	"github.com/beevik/etree"
)

type ShipRequest struct {
	UserCredential  *ComplexType.UserCredential `xml:"UserCredential"`
	RequstInfo		*RequstInfo `xml:"RequstInfo"`
	ShipType		string	`xml:"ShipType"`
	AuthorizedKey	string	`xml:"AuthorizedKey"`
}

type RequstInfo struct {
	Shipper		*ComplexType.Address	`xml:"Shipper"`
	Recipient	*ComplexType.Address	`xml:"Recipient"`
	Package		*ShipPackage			`xml:"Package"`
	PackageItems []*ComplexType.Package	`xml:"PackageItems"`
	LbSize		string			`xml:"LbSize"`
}

type ShipPackage struct {
	ShipDate	string `xml:"ShipDate"`
	InvoiceNumber	string `xml:"InvoiceNumber"`
	FTRCode	string `xml:"FTRCode"`
	CustomerReference string `xml:"CustomerReference"`
	ContentsType string `xml:"ContentsType"`
	ElectronicExportType string `xml:"ElectronicExportType"`
}

func (ship ShipRequest)ToNode(doc *etree.Document)(string, error)  {
	if doc == nil {
		doc = etree.NewDocument()
		doc.CreateProcInst("xml", `version="1.0" encoding="UTF-8"`)
	}
	node := doc.CreateElement("ShipRequest")
	node.CreateComment("This is Ship Element")

	// User
	ship.UserCredential.ToNode(node)

	// RequstInfo
	// Shiper
	requestInfo := node.CreateElement("RequstInfo")
	ship.RequstInfo.Shipper.NodeName = "Shipper"
	ship.RequstInfo.Shipper.ToNode(requestInfo)
	// Recipient
	ship.RequstInfo.Recipient.NodeName = "Recipient"
	ship.RequstInfo.Recipient.ToNode(requestInfo)
	// Package
	packageNode := requestInfo.CreateElement("Package")
	shipData := packageNode.CreateElement("ShipDate")
	shipData.CreateText(ship.RequstInfo.Package.ShipDate)
	//LbSize
	lbSizeNode := requestInfo.CreateElement("LbSize")
	lbSizeNode.CreateText(ship.RequstInfo.LbSize)

	invoiceNumberNode := packageNode.CreateElement("InvoiceNumber")
	invoiceNumberNode.CreateText(ship.RequstInfo.Package.InvoiceNumber)
	fTRCodeNode := packageNode.CreateElement("FTRCode")
	fTRCodeNode.CreateText(ship.RequstInfo.Package.FTRCode)
	customerReferenceNode := packageNode.CreateElement("CustomerReference")
	customerReferenceNode.CreateText(ship.RequstInfo.Package.CustomerReference)
	contentsTypeNode := packageNode.CreateElement("ContentsType")
	contentsTypeNode.CreateText(ship.RequstInfo.Package.ContentsType)
	electronicExportTypeNode := packageNode.CreateElement("ElectronicExportType")
	electronicExportTypeNode.CreateText(ship.RequstInfo.Package.ElectronicExportType)

	// PackageItems
	packageItemsNode := requestInfo.CreateElement("PackageItems")
	for _,pkg := range ship.RequstInfo.PackageItems {
		pkg.NodeName = "PackageItemInfo"
		pkg.ToNode(packageItemsNode)
	}


	shipType := node.CreateElement("ShipType")
	shipType.CreateText(ship.ShipType)

	authorizedKey := node.CreateElement("AuthorizedKey")
	authorizedKey.CreateText(ship.AuthorizedKey)

	return doc.WriteToString()
}

func (ship ShipRequest) ProcessShip()(shipReply *ShipResponse, err error) {
	requestXml, _ := ship.ToNode(nil)
	data,err := src.PostRequest(Config.API_SHIP, requestXml)
	if err != nil {
		fmt.Println("Post Request Ship Error:", err)
		return
	}
	//data := `<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ShipResponse><LableData><base64Binary></base64Binary></LableData><TrackNoList><PackageItemInfo><PackageId>0</PackageId><Length>10.000</Length><Width>11.000</Width><Height>12.000</Height><Weight>20.000</Weight><Insurance>0.000</Insurance><IsOurInsurance>false</IsOurInsurance><UspsMailpiece></UspsMailpiece><TrackNo>781047198665</TrackNo></PackageItemInfo><PackageItemInfo><PackageId>0</PackageId><Length>20.000</Length><Width>21.000</Width><Height>22.000</Height><Weight>25.000</Weight><Insurance>0.000</Insurance><IsOurInsurance>false</IsOurInsurance><UspsMailpiece></UspsMailpiece><TrackNo>781047199856</TrackNo></PackageItemInfo></TrackNoList><Msg></Msg><Sucess>true</Sucess><MainTrackingNum>781047198665</MainTrackingNum><LabelId>17864161</LabelId><Url>http://file.postpony.com/LabelCache/2020/12/08/a1c64395-c2b8-46ba-9225-b979b50aa4fb.pdf</Url><TotalFreight>36.85</TotalFreight><Code></Code><PresortNo></PresortNo><ResidentialAddress>false</ResidentialAddress></ShipResponse>`
	shipReply = new(ShipResponse)
	if err = xml.Unmarshal(data, shipReply); err != nil {
		fmt.Println("XML Unmarshal Error:",err)
		return
	}

	return
}